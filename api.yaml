---
apiVersion: v1
kind: Secret
metadata:
  name: authorizer-client-id
type: Opaque
data:
  authorizer_client_id: N2RlNTc0NWItYmVhMi00Njk2LWE4MjUtYmRiODI5ODM2Y2Nl
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: lakhansamani/aws-demo-api:0.1.5
          ports:
            - containerPort: 8090
          env:
            - name: AWS_REGION
              value: us-east-1
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-access-key-id
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secret-access-key
                  key: aws_secret_access_key
            - name: AUTHORIZER_ENDPOINT
              value: http://authorizer
            - name: AUTHORIZER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: authorizer-client-id
                  key: authorizer_client_id
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
    - port: 80
      name: http
      targetPort: 8090
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    certmanager.k8s.io/acme-challenge-type: dns01
    kubernetes.io/ingress.class: nginx
  name: api
spec:
  rules:
    - host: api.aws-demo.authorizer.dev
      http:
        paths:
          - backend:
              service:
                name: api
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - api.aws-demo.authorizer.dev
      secretName: api-tls
